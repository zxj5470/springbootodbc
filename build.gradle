buildscript {
    ext {
        kotlinVersion = '1.1.51'
        springBootVersion = '1.5.8.RELEASE'
    }
    repositories {
        def cn = "http://maven.aliyun.com/nexus/content/groups/public/"
        def abroad = "http://central.maven.org/maven2/"
        maven {
            url cn
            artifactUrls abroad
        }
        maven {
            url 'https://raw.github.com/zxj5470/personalMaven/master/'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }


}
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.github.zxj5470'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
repositories {
    def cn = "http://maven.aliyun.com/nexus/content/groups/public/"
    def abroad = "http://central.maven.org/maven2/"
    maven {
        url cn
        artifactUrls abroad
    }
    mavenCentral()
    maven {
        url 'https://raw.github.com/zxj5470/personalMaven/master/'
    }
}

jar {
    manifest {
        attributes(
                "Manifest-Version": "0.0.1",
                'Main-Class': 'com.github.zxj5470.SpringbootodbcApplication'
        )
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile "com.oracle:ojdbc6:11.1.0.7.0"

    testCompile('org.springframework.boot:spring-boot-starter-test')
}
